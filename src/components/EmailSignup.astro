---
---

<div class="max-w-md" id="signup">
  <h3 class="text-xl font-bold mb-3">Get Early Access</h3>
  <p class="text-gray-600 mb-4">Sign up to be notified when InfiniteGame launches.</p>
  
  <form id="brevo-signup-form" class="space-y-3">
    <div>
      <input 
        type="email" 
        id="email" 
        name="email" 
        placeholder="Enter your email" 
        required
        class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent"
      />
      
      <div class="hidden" aria-hidden="true" style="position: absolute; left: -9999px;">
        <input type="text" id="website" name="website" tabindex="-1" autocomplete="off" />
      </div>
    </div>
    <button 
      type="submit"
      class="w-full btn btn-primary"
    >
      Join the Waitlist
    </button>
  </form>
  
  <p class="text-sm text-gray-500 mt-3">
    We respect your privacy and will never share your information.
  </p>
</div>

<script>
  // Form handler using server-side endpoint
  const form = document.getElementById('brevo-signup-form');
  
  // Record form load time for timing-based bot detection
  const formLoadTime = Date.now();
  
  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const emailInput = document.getElementById('email') as HTMLInputElement;
    const email = emailInput?.value;
    
    // Check honeypot field - if filled, it's likely a bot
    const honeypotField = document.getElementById('website') as HTMLInputElement;
    if (honeypotField && honeypotField.value) {
      console.log('Bot submission detected via honeypot');
      // Show success message to trick bots
      if (form) {
        form.innerHTML = `
          <div class="bg-accent2/10 text-accent2 p-4 rounded-md">
            <p class="font-medium">Thanks for signing up!</p>
            <p class="text-sm mt-1">We'll notify you when InfiniteGame launches.</p>
          </div>
        `;
      }
      return; // Silently reject the submission
    }
    
    // Check if submission is suspiciously fast (less than 2 seconds)
    const submissionTime = Date.now();
    if (submissionTime - formLoadTime < 2000) {
      console.log('Bot submission detected via timing');
      // Show success message to trick bots
      if (form) {
        form.innerHTML = `
          <div class="bg-accent2/10 text-accent2 p-4 rounded-md">
            <p class="font-medium">Thanks for signing up!</p>
            <p class="text-sm mt-1">We'll notify you when InfiniteGame launches.</p>
          </div>
        `;
      }
      return; // Silently reject the submission
    }
    
    if (!email) return;
    
    try {
      // Show loading state
      const submitButton = form.querySelector('button[type="submit"]');
      if (submitButton) {
        submitButton.textContent = 'Submitting...';
        submitButton.setAttribute('disabled', 'true');
      }
      
      // Call server-side endpoint with honeypot data
      const response = await fetch('/api/subscribe', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ 
          email,
          website: honeypotField?.value || '', // Include honeypot field
          signupTime: submissionTime - formLoadTime // Include timing information
        })
      });
      
      const data = await response.json();
      
      if (!response.ok) {
        throw new Error(data.message || 'Failed to subscribe');
      }
      
      // Show success message
      if (form) {
        form.innerHTML = `
          <div class="bg-accent2/10 text-accent2 p-4 rounded-md">
            <p class="font-medium">Thanks for signing up!</p>
            <p class="text-sm mt-1">We'll notify you when InfiniteGame launches.</p>
          </div>
        `;
      }
    } catch (error) {
      console.error('Error submitting form:', error);
      
      // Show error message
      if (form) {
        const submitButton = form.querySelector('button[type="submit"]');
        if (submitButton) {
          submitButton.textContent = 'Join the Waitlist';
          submitButton.removeAttribute('disabled');
        }
        
        // Create error message element if it doesn't exist
        let errorElement = form.querySelector('.error-message');
        if (!errorElement) {
          errorElement = document.createElement('div');
          errorElement.className = 'error-message text-red-500 text-sm mt-2';
          form.appendChild(errorElement);
        }
        errorElement.textContent = 'Something went wrong. Please try again.';
      }
    }
  });
</script>